package com.tapgame.tap_game.services;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import okhttp3.*;

import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.TimeUnit;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot API.
 * 
 * <p>–≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API:
 * <ul>
 *   <li>–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</li>
 *   <li>–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ</li>
 *   <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª—ã</li>
 *   <li>–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö –∏–≥—Ä—ã</li>
 * </ul>
 * 
 * <p><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong>
 * <ul>
 *   <li>–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã —Å OkHttp</li>
 *   <li>JSON –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å Jackson</li>
 *   <li>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ properties —Ñ–∞–π–ª</li>
 *   <li>–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏</li>
 * </ul>
 * 
 * @author –ê–ª–∞–±—É–≥–∞
 * @version 1.0
 * @since 1.0
 * @see OkHttpClient
 * @see ObjectMapper
 */
public class TelegramService {
    
    private static final String CONFIG_FILE = "/telegram.properties";
    private static final int TIMEOUT_SECONDS = 30;
    private static final int MAX_RETRIES = 3;
    
    private final OkHttpClient httpClient;
    private final ObjectMapper objectMapper;
    private final Properties config;
    private final String botToken;
    private final String baseUrl;
    
    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–µ—Ä–≤–∏—Å–∞ Telegram.
     * 
     * <p>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç HTTP –∫–ª–∏–µ–Ω—Ç, JSON –º–∞–ø–ø–µ—Ä –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.
     * 
     * @throws RuntimeException –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
     */
    public TelegramService() {
        this.httpClient = new OkHttpClient.Builder()
                .connectTimeout(TIMEOUT_SECONDS, TimeUnit.SECONDS)
                .readTimeout(TIMEOUT_SECONDS, TimeUnit.SECONDS)
                .writeTimeout(TIMEOUT_SECONDS, TimeUnit.SECONDS)
                .build();
        
        this.objectMapper = new ObjectMapper();
        this.config = loadConfiguration();
        this.botToken = config.getProperty("telegram.bot.token");
        this.baseUrl = config.getProperty("telegram.api.base.url") + botToken;
        
        if (botToken == null || botToken.equals("YOUR_BOT_TOKEN_HERE")) {
            System.err.println("‚ö†Ô∏è Telegram Bot Token –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ telegram.properties");
        }
    }
    
    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ properties —Ñ–∞–π–ª–∞.
     * 
     * @return –æ–±—ä–µ–∫—Ç Properties —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
     * @throws RuntimeException –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
     */
    private Properties loadConfiguration() {
        Properties props = new Properties();
        try {
            props.load(getClass().getResourceAsStream(CONFIG_FILE));
        } catch (IOException e) {
            throw new RuntimeException("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Telegram: " + e.getMessage(), e);
        }
        return props;
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
     * 
     * <p>–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram API.
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param message —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @return {@code true} –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, {@code false} –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
     */
    public boolean sendMessage(String chatId, String message) {
        if (botToken == null || botToken.equals("YOUR_BOT_TOKEN_HERE")) {
            System.out.println("üì± [Telegram] –°–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω): " + message);
            return false;
        }
        
        try {
            String url = baseUrl + config.getProperty("telegram.api.send.message.url");
            
            String jsonBody = String.format(
                "{\"chat_id\":\"%s\",\"text\":\"%s\",\"parse_mode\":\"HTML\"}",
                chatId, escapeJson(message)
            );
            
            RequestBody body = RequestBody.create(
                jsonBody, MediaType.get("application/json; charset=utf-8")
            );
            
            Request request = new Request.Builder()
                    .url(url)
                    .post(body)
                    .build();
            
            try (Response response = httpClient.newCall(request).execute()) {
                if (response.isSuccessful()) {
                    System.out.println("üì± [Telegram] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: " + message);
                    return true;
                } else {
                    System.err.println("‚ùå [Telegram] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " + response.code() + " " + response.message());
                    return false;
                }
            }
            
        } catch (Exception e) {
            System.err.println("‚ùå [Telegram] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: " + e.getMessage());
            return false;
        }
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–≤–µ—Å—Ç–∞.
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param questName –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
     * @param reward –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –∫–≤–µ—Å—Ç
     */
    public void sendQuestCompletedNotification(String chatId, String questName, int reward) {
        String message = String.format(
            "üéØ <b>–ö–≤–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!</b>\n\n" +
            "üìã –ó–∞–¥–∞–Ω–∏–µ: %s\n" +
            "üí∞ –ù–∞–≥—Ä–∞–¥–∞: %d –º–æ–Ω–µ—Ç\n\n" +
            "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å! üöÄ",
            questName, reward
        );
        sendMessage(chatId, message);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≤—ã—à–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è.
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param newLevel –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
     */
    public void sendLevelUpNotification(String chatId, int newLevel) {
        String message = String.format(
            "üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n\n" +
            "‚ö° –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–æ—Å—Ç–∏–≥ <b>%d —É—Ä–æ–≤–Ω—è</b>!\n\n" +
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –±–æ–ª—å—à–µ –Ω–∞–≥—Ä–∞–¥! üöÄ",
            newLevel
        );
        sendMessage(chatId, message);
    }
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–∏–≥—Ä—ã—à–µ –ø—Ä–∏–∑–∞.
     * 
     * @param chatId ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param prizeName –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–∞
     */
    public void sendPrizeWonNotification(String chatId, String prizeName) {
        String message = String.format(
            "üéÅ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –≤—ã–∏–≥—Ä—ã—à–µ–º!</b>\n\n" +
            "üèÜ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: <b>%s</b>\n\n" +
            "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞! üìû",
            prizeName
        );
        sendMessage(chatId, message);
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Telegram –∫–∞–Ω–∞–ª.
     * 
     * <p>–í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–æ–≤ Telegram API
     * –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª.
     * 
     * @param userId ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param channelUsername –∏–º—è –∫–∞–Ω–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, @alabuga_channel)
     * @return {@code true} –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω, {@code false} –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
     */
    public boolean checkChannelSubscription(String userId, String channelUsername) {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å API –≤—ã–∑–æ–≤
        System.out.println("üì± [Telegram] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è " + userId + " –Ω–∞ –∫–∞–Ω–∞–ª " + channelUsername);
        
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤
        return true;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ.
     * 
     * @return JSON —Å—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–æ—Ç–µ –∏–ª–∏ null –ø—Ä–∏ –æ—à–∏–±–∫–µ
     */
    public String getBotInfo() {
        if (botToken == null || botToken.equals("YOUR_BOT_TOKEN_HERE")) {
            return null;
        }
        
        try {
            String url = baseUrl + config.getProperty("telegram.api.get.me.url");
            
            Request request = new Request.Builder()
                    .url(url)
                    .get()
                    .build();
            
            try (Response response = httpClient.newCall(request).execute()) {
                if (response.isSuccessful() && response.body() != null) {
                    return response.body().string();
                }
            }
        } catch (Exception e) {
            System.err.println("‚ùå [Telegram] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: " + e.getMessage());
        }
        
        return null;
    }
    
    /**
     * –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è JSON.
     * 
     * @param text –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
     * @return —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
     */
    private String escapeJson(String text) {
        return text.replace("\\", "\\\\")
                  .replace("\"", "\\\"")
                  .replace("\n", "\\n")
                  .replace("\r", "\\r")
                  .replace("\t", "\\t");
    }
    
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Telegram API.
     * 
     * @return {@code true} –µ—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–µ–Ω, {@code false} –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
     */
    public boolean isApiAvailable() {
        return getBotInfo() != null;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
     * 
     * @return –æ–±—ä–µ–∫—Ç Properties —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
     */
    public Properties getConfig() {
        return new Properties(config);
    }
}
